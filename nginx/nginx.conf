env INFLUX_TOKEN;

events { worker_connections 1024; }

http {
  upstream influxdb { server influxdb:8086; }
  upstream grafana  { server grafana:3000; }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  server {
    listen 443 ssl;
    server_name localhost nginx-mtls;

    ssl_certificate      /etc/nginx/certs/server-cert.pem;
    ssl_certificate_key  /etc/nginx/certs/server-key.pem;

    ssl_client_certificate /etc/nginx/certs/ca-cert.pem;
    ssl_verify_client optional;
    ssl_verify_depth 2;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    proxy_http_version 1.1;
    proxy_request_buffering off;
    proxy_buffering off;
    proxy_read_timeout 300s;

    location = /health {
      access_log off;
      add_header Content-Type text/plain;
      return 200 "OK\n";
    }

    location /api/v2/ {
      if ($ssl_client_verify != SUCCESS) { return 495; }

      proxy_pass http://influxdb;
      proxy_set_header Authorization "Token $INFLUX_TOKEN";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
      proxy_pass http://grafana;
      proxy_set_header Host $host;
    }


    # Proxy Grafana Live WebSocket connections.
    location /api/live/ {
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $connection_upgrade;
       proxy_set_header Host $host;
       proxy_pass http://grafana;
    }
  }
}